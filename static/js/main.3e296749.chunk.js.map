{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/App/App.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryModal.js","components/services/images-api.js","components/Loader/Loader.js","components/Button/Button.js","components/App/App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","inputValue","addInputSearch","e","setState","currentTarget","value","trim","onSubmitInput","preventDefault","props","onSubmit","className","s","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","url","name","onClickImg","onClick","src","alt","ImageGalleryItemImage","ImageGallery","images","onImgClick","map","item","webformatURL","user","id","modal","document","querySelector","Modal","onEscClick","code","onClose","clearModal","onBackdropClick","target","window","addEventListener","removeEventListener","createPortal","Overlay","children","ModalImage","ImagesAPIService","searchQuery","page","perPage","fetch","then","response","ok","json","Promise","reject","Error","incrementPage","newQuery","Spinner","color","height","width","timeout","Button","onClickBtn","imagesAPIService","Status","App","searchValue","largeImg","showModal","error","status","getSearchValue","clearModalData","toggleModal","loadMoreImages","loadImages","openModalImg","largeImage","find","img","query","fetchImages","hits","length","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","prevState","prevName","nextName","resetPage","message","notFound","largeImageURL","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3e296749.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__lyqiD\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3f_e9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3TeoQ\",\"Modal\":\"Modal_Modal__i-z5s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__35heC\",\"notFound\":\"App_notFound__3brG6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__29wgb\",\"notFound\":\"ImageGallery_notFound__1b60-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Loader_Spinner__2MrCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__Yx2db\"};","import { Component } from 'react';\r\nimport s from './Searchbar.module.css';\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    inputValue: '',\r\n  };\r\n\r\n  addInputSearch = e => {\r\n    this.setState({ inputValue: e.currentTarget.value.trim() });\r\n  };\r\n\r\n  onSubmitInput = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({ inputValue: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={this.onSubmitInput}>\r\n          <button type=\"submit\" className={s.SearchFormButton}>\r\n            <span className={s.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n          <input\r\n            className={s.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.inputValue}\r\n            onChange={this.addInputSearch}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nexport default function ImageGalleryItem({url, name, onClickImg}){\r\n    return (\r\n\r\n        <li className={s.ImageGalleryItem} onClick={onClickImg}>\r\n            <img src={url} alt={name} className={s.ImageGalleryItemImage} />\r\n</li>\r\n    )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    url: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport s from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nexport default function ImageGallery({ images, onImgClick }) {\r\n  return (\r\n    <>\r\n      <ul className={s.ImageGallery}>\r\n        {images.map(item => (\r\n          <ImageGalleryItem\r\n            key={item.id}\r\n            url={item.webformatURL}\r\n            name={item.user}\r\n            onClickImg={onImgClick}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n","import { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modal = document.querySelector('#modal-root');\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.onEscClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.onEscClick);\r\n  }\r\n\r\n  onEscClick = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n      this.props.clearModal();\r\n    }\r\n  };\r\n\r\n  onBackdropClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      this.props.onClose();\r\n      this.props.clearModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className={s.Overlay} onClick={this.onBackdropClick}>\r\n        <div className={s.Modal}>{this.props.children}</div>\r\n      </div>,\r\n      modal,\r\n    );\r\n  }\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\n\r\nexport default function ModalImage({ url, name }) {\r\n    return (\r\n        <img src={url} alt={name} />\r\n    )\r\n}\r\n\r\nModalImage.propTypes = {\r\n    url: PropTypes.string.isRequired,\r\n    name:PropTypes.string.isRequired,\r\n}\r\n","const BASE_URL = 'https://pixabay.com/api/';\r\nconst KEY = '22169948-cc9572b9e3579c1f2dd268170';\r\nexport default class ImagesAPIService {\r\n  constructor() {\r\n    this.searchQuery = '';\r\n    this.page = 1;\r\n    this.perPage = 12;\r\n  }\r\n\r\n  fetchImages() {\r\n    const url = `${BASE_URL}?image_type=photo&orientation=horizontal&q=${this.searchQuery}&page=${this.page}&per_page=${this.perPage}&key=${KEY}`;\r\n\r\n    return fetch(url)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        return Promise.reject(\r\n          new Error(`Нет изображений по данному запросу ${this.searchQuery}`),\r\n        );\r\n      })\r\n      .then(images => {\r\n        this.incrementPage();\r\n        return images;\r\n      });\r\n  }\r\n\r\n  incrementPage() {\r\n    this.page += 1;\r\n  }\r\n\r\n  resetPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  get query() {\r\n    return this.searchQuery;\r\n  }\r\n\r\n  set query(newQuery) {\r\n    this.searchQuery = newQuery;\r\n  }\r\n}\r\n","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport s from './Loader.module.css';\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <div className={s.Spinner}>\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import s from './Button.module.css';\r\n\r\nexport default function Button({onClickBtn}) {\r\n    return (\r\n        <button type=\"button\" className={s.Button} onClick={onClickBtn}>Load more</button>\r\n    )\r\n}","import { Component } from 'react';\r\nimport Searchbar from '../Searchbar/Searchbar';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport Modal from '../Modal/Modal';\r\nimport ModalImage from '../ImageGalleryItem/ImageGalleryModal';\r\nimport s from './App.module.css';\r\nimport ImagesAPIService from '../services/images-api';\r\nimport Loader from '../Loader/Loader';\r\nimport Button from '../Button/Button';\r\n\r\nconst imagesAPIService = new ImagesAPIService();\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\nclass App extends Component {\r\n  state = {\r\n    searchValue: '',\r\n    largeImg: {},\r\n    showModal: false,\r\n    error: null,\r\n    images: [],\r\n    status: Status.IDLE,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const prevName = prevState.searchValue;\r\n    const nextName = this.state.searchValue;\r\n\r\n    if (prevName !== nextName) {\r\n      this.setState({images:[]})\r\n      imagesAPIService.resetPage();\r\n      this.loadImages(nextName);\r\n    }\r\n  }\r\n\r\n  getSearchValue = searchValue => {\r\n    this.setState({ searchValue });\r\n  };\r\n\r\n  clearModalData = () => {\r\n    this.setState({ largeImg: {} });\r\n  };\r\n\r\n  toggleModal = e => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n  };\r\n\r\n  loadMoreImages = () => {\r\n    imagesAPIService.incrementPage();\r\n    this.loadImages(this.state.searchValue);\r\n  };\r\n\r\n  openModalImg = e => {\r\n\r\n    const largeImage = this.state.images.find(\r\n      img => img.webformatURL === e.target.src,\r\n    );\r\n    this.setState({ largeImg: largeImage });\r\n    this.toggleModal();\r\n  };\r\n\r\n  loadImages = value => {\r\n    this.setState({ status: Status.PENDING });\r\n    imagesAPIService.query = value;\r\n\r\n    imagesAPIService\r\n      .fetchImages()\r\n      .then(images => {\r\n        images.hits.length !== 0\r\n          ? this.setState({\r\n              images: [...this.state.images, ...images.hits],\r\n              status: Status.RESOLVED,\r\n            })\r\n          : this.setState({ status: Status.RESOLVED });\r\n      })\r\n      .catch(error => this.setState({ error, status: Status.REJECTED }))\r\n      .finally(() => {\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { largeImg, searchValue, showModal, images, status } = this.state;\r\n    return (\r\n      <div className={s.App}>\r\n        <Searchbar onSubmit={this.getSearchValue} />\r\n        {status === Status.IDLE && null}\r\n        {status === Status.REJECTED && <div>{this.error.message}</div>}\r\n        {status === Status.RESOLVED && images.length === 0 && <div className={s.notFound}>Images not found</div>}\r\n        <ImageGallery\r\n          onImgClick={this.openModalImg}\r\n          images={images}\r\n        />\r\n        {status === Status.PENDING && <Loader />}\r\n        {images.length !== 0 && (\r\n          <Button onClickBtn={() => this.loadMoreImages(searchValue)} />\r\n        )}\r\n\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal} clearModal={this.clearModalData}>\r\n            <ModalImage url={largeImg.largeImageURL} name={largeImg.user} />\r\n          </Modal>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__38HUm\",\"SearchForm\":\"Searchbar_SearchForm__24i4y\",\"SearchFormButton\":\"Searchbar_SearchFormButton__kQu4A\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2af__\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1VUZl\",\"SearchForm-input\":\"Searchbar_SearchForm-input__3IlyQ\"};"],"sourceRoot":""}